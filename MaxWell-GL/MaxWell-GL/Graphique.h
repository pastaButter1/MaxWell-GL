#pragma once

#define OPENGL

#include <stdint.h>
#include <cstdio>

#include "Lib/GLM/glm/glm.hpp"

#ifdef OPENGL
//#define GLFW_DLL

#include "Lib/GLEW/include/GL/glew.h"

#ifdef _DEBUG
#define APPEL_GX(x) x; { GLuint error = glGetError(); while(error != GL_NO_ERROR) { printf("ERREUR | %s(%i) : %i\n", __FILE__, __LINE__, error); error = glGetError(); }}
#endif
#ifdef _RELEASE
#define APPEL_GX(x) x
#endif

#define VERTEX_SHADER GL_VERTEX_SHADER
#define FRAGMENT_SHADER GL_FRAGMENT_SHADER
#define GEOMETRY_SHADER GL_GEOMETRY_SHADER
#define COMPUTE_SHADER GL_COMPUTE_SHADER

#define TYPE_VIRGULE GL_FLOAT
#define TYPE_ENTIER GL_INT
#define TYPE_ENTIER_POSITIF GL_UNSIGNED_INT

#define TYPE_VRAI GLTRUE
#define TYPE_FAUX GL_FALSE

#define TEX_2D GL_TEXTURE_2D

#define TEX_ROUGE GL_RED
#define TEX_VERT GL_GREEN
#define TEX_BLEU GL_BLUE
#define TEX_ALPHA GL_ALPHA
#define TEX_RV GL_RG
#define TEX_RVB GL_RGB
#define TEX_BVR GL_BGR
#define TEX_RVBA GL_RGBA
#define TEX_BVRA GL_BGRA
#define TEX_RED_ENTIER GL_RED_INTEGER
#define TEX_RV_ENTIER GL_RG_INTEGER
#define TEX_RVB_ENTIER GL_RGB_INTEGER
#define TEX_BVR_ENTIER GL_BGR_INTEGER
#define TEX_RVBA_ENTIER GL_RGBA_INTEGER
#define TEX_BVRA_ENTIER GL_BGRA_INTEGER
#define TEX_LUMINANCE GL_LUMINANCE
#define TEX_LUMINANCE_ALPHA GL_LUMINANCE_ALPHA
#define TEX_INDEX_STENCIL GL_STENCIL_INDEX
#define TEX_COMPOSANT_PROFONDEUR GL_DEPTH_COMPONENT
#define TEX_PROFONDEUR_STENCIL GL_DEPTH_STENCIL

#define TEX_FORMAT_ROUGE TEX_ROUGE
#define TEX_FORMAT_RV TEX_RV
#define TEX_FORMAT_RVB TEX_RVB
#define TEX_FORMAT_BVR TEX_BVR
#define TEX_FORMAT_RVBA TEX_RVBA
#define TEX_FORMAT_BVRA TEX_BVRA
#define TEX_FORMAT_ROUGE_ENTIER TEX_RED_ENTIER
#define TEX_FORMAT_RV_ENTIER TEX_RV_ENTIER
#define TEX_FORMAT_RVB_ENTIER TEX_RVB_ENTIER
#define TEX_FORMAT_BVR_ENTIER TEX_BVR_ENTIER
#define TEX_FORMAT_RVBA_ENTIER TEX_RVBA_ENTIER
#define TEX_FORMAT_BVRA_ENTIER TEX_BVRA_ENTIER
#define TEX_FORMAT_INDEX_STENCIL TEX_INDEX_STENCIL
#define TEX_FORMAT_COMPOSANT_PROFONDEUR TEX_COMPOSANT_PROFONDEUR
#define TEX_FORMAT_PROFONDEUR_STENCIL TEX_PROFONDEUR_STENCIL

#define TEX_INFORMAT_ROUGE TEX_FORMAT_ROUGE
#define TEX_INFORMAT_RV TEX_FORMAT_RV
#define TEX_INFORMAT_RVB TEX_FORMAT_RVB
#define TEX_INFORMAT_RVBA TEX_FORMAT_RVBA
#define TEX_INFORMAT_COMPOSANT_PROFONDEUR TEX_FORMAT_COMPOSANT_PROFONDEUR
#define TEX_INFORMAT_PROFONDEUR_STENCIL TEX_FORMAT_PROFONDEUR_STENCIL
#define TEX_INFORMAT_ROUGE TEX_FORMAT_ROUGE

#define TEX_PROFONDEUR24_STENCIL8 GL_DEPTH24_STENCIL8

#define FBO_ATTACHEMENT_COULEUR0 GL_COLOR_ATTACHMENT0
#define FBO_ATTACHEMENT_PROFONDEUR GL_DEPTH_ATTACHMENT
#define FBO_ATTACHEMENT_STENCIL GL_STENCIL_ATTACHMENT
#define FBO_ATTACHEMENT_PROFONDEUR_STENCIL GL_DEPTH_STENCIL_ATTACHMENT

#define TEX_FILTRE_PROCHE GL_NEAREST
#define TEX_FILTRE_LINAIRE GL_LINEAR

#define TEX_ENVELOPPER_REPETER GL_REPEAT
#define TEX_ENVELOPPER_MIROIR_REPETER GL_MIRRORED_REPEAT
#define TEX_ENVELOPPER_LIMITER_BORDURE GL_CLAMP_TO_BORDER
#define TEX_ENVELOPPER_LIMITER_BORD GL_CLAMP_TO_EDGE

#define TEX_CUBEMAP_POSX GL_TEXTURE_CUBE_MAP_POSITIVE_X
#define TEX_CUBEMAP_NEGX GL_TEXTURE_CUBE_MAP_NEGATIVE_X
#define TEX_CUBEMAP_POSY GL_TEXTURE_CUBE_MAP_POSITIVE_Z
#define TEX_CUBEMAP_NEGY GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
#define TEX_CUBEMAP_POSZ GL_TEXTURE_CUBE_MAP_POSITIVE_Z
#define TEX_CUBEMAP_NEGZ GL_TEXTURE_CUBE_MAP_NEGATIVE_Z

#define STENCIL_FUNC_GARDER GL_KEEP
#define STENCIL_FUNC_REMPLACER GL_REPLACE
#define STENCIL_FUNC_INCR GL_INCR
#define STENCIL_FUNC_DECR GL_DECR
#define STENCIL_FUNC_ZERO GL_ZERO
#define STENCIL_FUNC_INCR_ENVELOPPER GL_INCR_WRAP
#define STENCIL_FUNC_DECR_ENVELOPPER GL_DECR_WRAP

#define FUNC_EGAL GL_EQUAL
#define FUNC_PAS_EGAL GL_NOTEQUAL
#define FUNC_MOINS_EGAL GL_LEQUAL
#define FUNC_PLUS_EGAL GL_GEQUAL
#define FUNC_PLUS_PETIT GL_LESS
#define FUNC_PLUS_GRAND GL_GREATER
#define FUNC_JAMAIS GL_NEVER
#define FUNC_TOUJOURS GL_ALWAYS


#endif